<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leng.oldass.dao.UserDao">

    <resultMap type="com.leng.oldass.entity.User" id="UserMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="usrface" column="usrface" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserWithRoles" type="com.leng.oldass.entity.User" extends="UserMap">
        <collection property="roles" ofType="com.leng.oldass.entity.Role">
            <result property="id" column="rid" jdbcType="INTEGER"/>
            <result property="name" column="rName" jdbcType="VARCHAR"/>
            <result property="nameZh" column="rNameZh" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <!--获取除当前用户外的所有用户-->
    <select id="getAllUserExceptCurrentUser" resultMap="UserMap">
        select * from user where id != #{id};
    </select>

    <!--获取所有用户-->
    <select id="getAllUsers" resultMap="UserWithRoles">
        select user.id, user.name, user.phone, user.phone, user.email, user.enabled, user.username, user.usrface,
               user.remark, r.id as rid, r.name as rname, r.nameZh as rnameZh from user left join user_role ur on user.id = ur.userId
               left join role r on ur.roleId = r.id where user.id != #{userid}
        <if test="keywords!=null">
            and user.name like concat('%', #{keywords}, '%')
        </if>
        order by user.id;
    </select>

    <!--查询用户角色-->
    <select id="getUserRolesById" resultType="com.leng.oldass.entity.Role">
        select r.* from role r, user_role ur where ur.roleId = r.id and ur.userId = #{id};
    </select>

    <!--通过username查询用户-->
    <select id="loadUserByUserName" resultMap="UserWithRoles">
        select user.*, r.id as rid, r.name as rName, r.nameZh as rNameZh from user left join user_role ur on user.id = ur.userId
            left join role r on ur.roleId = r.id where username=#{username}
        order by user.id;
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, name, phone, email, enabled, username, password, usrface, remark
        from user
        where id = #{id}
    </select>

    <select id="queryByName" resultMap="UserMap">
        select
            id, name, phone, email, enabled, username, password, usrface, remark
        from user
        where username = #{username}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, name, phone, email, enabled, username, password, usrface, remark
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="usrface != null and usrface != ''">
                and usrface = #{usrface}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="usrface != null and usrface != ''">
                and usrface = #{usrface}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, phone, email, enabled, username, password, usrface, remark)
        values (#{name}, #{phone}, #{email}, #{enabled}, #{username}, #{password}, #{usrface}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, phone, email, enabled, username, password, usrface, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.phone}, #{entity.email}, #{entity.enabled}, #{entity.username}, #{entity.password}, #{entity.usrface}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, phone, email, enabled, username, password, usrface, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.phone}, #{entity.email}, #{entity.enabled}, #{entity.username}, #{entity.password}, #{entity.usrface}, #{entity.remark})
        </foreach>
        on duplicate key update
        name = values(name),
        phone = values(phone),
        email = values(email),
        enabled = values(enabled),
        username = values(username),
        password = values(password),
        usrface = values(usrface),
        remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="usrface != null and usrface != ''">
                usrface = #{usrface},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

    <update id="updateUserFace">
        update user set usrface = #{url} where id = #{id};
    </update>

    <update id="updatePassword">
        update user set password = #{encodePass} where id = #{id};
    </update>
</mapper>

